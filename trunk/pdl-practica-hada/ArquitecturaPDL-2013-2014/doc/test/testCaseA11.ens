; INICIO PROGRAMA PRINCIPAL HAda 
RES 31
MOVE #65535 , .SP
MOVE .SP , .IY
SUB  .SP , #6
MOVE .A , .SP
MOVE .IY , /0
;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L_0
L_0 :

;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L_2
L_2 :

MOVE /1 , .R1
SUB .R1 , #7
MOVE [.A] , .R2 
SUB .R2, #-8[.IY]
MOVE .A, #-10[.IY]
MOVE .A, .R9

; Traducir Quadruple - [MV w, T_0, null]
MOVE #-10[.IY], #-9[.IY]
WRSTR /cadena1
WRCHAR #10
WRCHAR #13
WRINT #-9[.IY]
WRCHAR #10
WRCHAR #13
L_3 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L_2: 
; Retorno Subprograma 
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /1
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY] , .IX
MOVE .R7 , .PC
MOVE .A, #-5[.IY] 
FIN_L_2 : 

; Traducir Quadruple - [MV y, 5, null]
MOVE #5, #-7[.IY]
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO x, 8, null]
; Llamada Funcion Quadruple - [CALL resta, 1, 0]
MOVE .SP , .IX
MOVE #-6[.IY] , #-8[.IX]
MOVE /1 , #-2[.IY]
MOVE .IY , /1
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L_4 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L_4 , #-4[.IY]
BR /L_2
REF_L_4:
BR /REF_L_2
RET_L_4: 
MOVE .R9 , #-5[.IY]

L_1 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L_0: 
; Retorno Subprograma 
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY] , .IX
MOVE .R7 , .PC
MOVE .A, #-5[.IY] 
FIN_L_0 : 

WRSTR /cadena2
WRCHAR #10
WRCHAR #13
; Traducir Quadruple - [MV once, 11, null]
MOVE #11, #-5[.IY]
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO once, 6, null]
; Llamada Funcion Quadruple - [CALL proc1, 0, 0]
MOVE .SP , .IX
MOVE #-5[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #8
MOVE .A , .SP
MOVE #RET_L_5 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L_5 , #-4[.IY]
BR /L_0
REF_L_5:
BR /REF_L_0
RET_L_5: 
MOVE .R9 , #-5[.IY]

HALT 

; Inicio de las cadenas de texto

cadena0: DATA "\n"
cadena1: DATA "w(-6):"
cadena2: DATA "PROCEDIMIENTOS ANIDADOS"
